---
title: "Práctico R 2. Construcción de escalas"
date: "2023-10-19"
lang: es
website:
  comments:
    giscus:
      repo: kevin-carrasco/investigacion-cuantitativa
---


```{r setup, include=FALSE, cache = TRUE}
require("knitr")
opts_chunk$set(warning=FALSE,
             message=FALSE,
             echo=TRUE,
             cache = TRUE, fig.width=7, fig.height=5.2)
```

# Presentación

Para el taller práctico de hoy utilizaremos la base de datos del Estudio Longitudinal Social de Chile, realizado por el Centro de estudios del conflicto y la cohesión social [COES](https://coes.cl/).

El Estudio Longitudinal Social del Chile [ELSOC](https://coes.cl/encuesta-panel/), único en Chile y América Latina, consiste en encuestar a casi 3.000 chilenos, anualmente, a lo largo de una década. ELSOC ha sido diseñado para evaluar la manera cómo piensan, sienten y se comportan los chilenos en torno a un conjunto de temas referidos al conflicto y la cohesión social en Chile. La población objetivo son hombres y mujeres entre 15 y 75 años de edad, tiene una representación de la población nacional urbana, donde se obtuvo una muestra original de **2927** casos en el año 2016 y mantiene **1728** en 2022, además de una muestra de refresco en 2018.


# Objetivo general

El objetivo de este ejercicio práctico es comprender y estimar el proceso de construcción y validación de escalas en R.


# Ejercicio práctico


## Cargar librerías

Las librerías que utilizaremos esta sesión son las siguientes:

```{r, message=FALSE, warning=FALSE}
# install.packages("pacman") # Cargar sólo si no la tenemos instalada
library(pacman)
pacman::p_load(tidyverse, # conjunto de paquetes, sobre todo dplyr y ggplot2
               car,       # para recodificar
               psych,     # para Alfa de Chronbach
               sjmisc,    # para descriptivos
               sjPlot,     # para gráficos
               sjlabelled) # etiquetas
options(scipen = 999) # para desactivar notacion cientifica
rm(list = ls())       # para limpiar el entorno de trabajo
```

## Datos y variables

Para el ejercicio de escalas, utilizaremos la base de datos de ELSOC, específicamente el módulo de **Salud y Bienestar**. De este módulo utilizaremos un concepto en particular llamado *Estado de ánimo: sintomatología depresiva* con los ítems:

- Frecuencia: Poco interés o alegría
- Frecuencia: Decaimiento, pesadez o desesperanza
- Frecuencia: Dificultad para dormir o exceso de sueño
- Frecuencia: Cansancio o sensación de falta de energía
- Frecuencia: Apetito disminuido o aumentado
- Frecuencia: Dificultad para concentrarse
- Frecuencia: Mala opinión de sí mismo
- Frecuencia: Enlentecimiento físico
- Frecuencia: Pensamiento de muerte o dañarse

Esta escala tiene solamente una dimensión, por lo que no es necesario crear objetos que contengan a cada dimensión

### Cargar base de datos

```{r }
load(url("https://dataverse.harvard.edu/api/access/datafile/7245118")) #Cargar base de datos
```

## Filtrar base de datos

Filtraremos la base de datos para quedarnos con las observaciones correspondientes solamente a la ola 1, y además seleccionaremos los ítems de interés.

```{r}
data <- elsoc_long_2016_2022.2 %>% filter(ola==1) %>%  # seleccionamos solo los casos de la ola 1
  select(poco_interes=s11_01,
         decaimiento=s11_02,
         dificultad_dormir=s11_03,
         cansancio=s11_04,
         apetito_disminuido=s11_05,
         dificultad_concentrarse=s11_06,
         mala_opinion=s11_07,
         enlentecimiento=s11_08,
         pensamiento_muerte=s11_09
         ) # items sintomatologia depresiva

head(data)
table(data$poco_interes)
table(data$decaimiento)
table(data$dificultad_dormir)
```

Estos ítems cuentan con las mismas categorías de respuesta: (1) Nunca, (2) Algunos dias, (3) Mas de la mitad de los dias, (4) Casi todos los dias, y (5) Todos los dias. Además de los valores codificados como -888 y -999.

### Recodificar

Recodificamos los valores -888 y -999 en NA y eliminamos los NAs.

```{r}
data$poco_interes <- car::recode(data$poco_interes, "c(-999,-888)=NA")
data$decaimiento <- car::recode(data$decaimiento, "c(-999,-888)=NA")
data$dificultad_dormir <- car::recode(data$dificultad_dormir, "c(-999,-888)=NA")
data$cansancio <- car::recode(data$cansancio, "c(-999,-888)=NA")
data$apetito_disminuido <- car::recode(data$apetito_disminuido, "c(-999,-888)=NA")
data$dificultad_concentrarse <- car::recode(data$dificultad_concentrarse, "c(-999,-888)=NA")
data$mala_opinion <- car::recode(data$mala_opinion, "c(-999,-888)=NA")
data$enlentecimiento <- car::recode(data$enlentecimiento, "c(-999,-888)=NA")
data$pensamiento_muerte <- car::recode(data$pensamiento_muerte, "c(-999,-888)=NA")

data <- data %>% mutate(across(everything(), ~ . - 1))

table(data$poco_interes)

data$poco_interes <- set_labels(data$poco_interes,
            labels=c( "Nunca"=0,
                      "Algunos dias"=1,
                      "Mas de la mitad de los dias"=2,
                      "Casi todos los dias"=3,
                      "Todos los dias"=4))

data$decaimiento <- set_labels(data$decaimiento,
            labels=c( "Nunca"=0,
                      "Algunos dias"=1,
                      "Mas de la mitad de los dias"=2,
                      "Casi todos los dias"=3,
                      "Todos los dias"=4))

data$dificultad_dormir <- set_labels(data$dificultad_dormir,
            labels=c( "Nunca"=0,
                      "Algunos dias"=1,
                      "Mas de la mitad de los dias"=2,
                      "Casi todos los dias"=3,
                      "Todos los dias"=4))

data$cansancio <- set_labels(data$cansancio,
            labels=c( "Nunca"=0,
                      "Algunos dias"=1,
                      "Mas de la mitad de los dias"=2,
                      "Casi todos los dias"=3,
                      "Todos los dias"=4))
data$apetito_disminuido <- set_labels(data$apetito_disminuido,
            labels=c( "Nunca"=0,
                      "Algunos dias"=1,
                      "Mas de la mitad de los dias"=2,
                      "Casi todos los dias"=3,
                      "Todos los dias"=4))
data$dificultad_concentrarse <- set_labels(data$dificultad_concentrarse,
            labels=c( "Nunca"=0,
                      "Algunos dias"=1,
                      "Mas de la mitad de los dias"=2,
                      "Casi todos los dias"=3,
                      "Todos los dias"=4))
data$mala_opinion <- set_labels(data$mala_opinion,
            labels=c( "Nunca"=0,
                      "Algunos dias"=1,
                      "Mas de la mitad de los dias"=2,
                      "Casi todos los dias"=3,
                      "Todos los dias"=4))
data$enlentecimiento <- set_labels(data$enlentecimiento,
            labels=c( "Nunca"=0,
                      "Algunos dias"=1,
                      "Mas de la mitad de los dias"=2,
                      "Casi todos los dias"=3,
                      "Todos los dias"=4))
data$pensamiento_muerte <- set_labels(data$pensamiento_muerte,
            labels=c( "Nunca"=0,
                      "Algunos dias"=1,
                      "Mas de la mitad de los dias"=2,
                      "Casi todos los dias"=3,
                      "Todos los dias"=4))
```

## Explorar datos

### Descriptivos

```{r}
plot_stackfrq(data) + theme(legend.position="bottom")
```

## Análisis

### Estimar correlación

Dado que la escala tiene solamente una dimensión, estimaremos la correlación de toda la escala.

```{r}
tab_corr(data, triangle = "lower")
```

Podemos observar que todas las correlaciones son positivas, por lo que no quedaron ítems invertidos.

## Estimar consistencia interna

### Alfa de Chronbach

Primero, estimaremos la consistencia interna con un **alfa de Chronbach**. El alfa de Chronbach, es un estadístico que permite estimar la fiabilidad de un test por consistencia interna. Su ventaja es que es fácil de estimar. Sus desventajas, sin embargo, son que:

- Puede aumentarse artificialmente incorporando ítems parecidos;
- Asume que el constructo es unidimensional;
- Es afectado por número de ítems, el número de alternativas de respuesta y la varianza del test (Domínguez-Lara & Merino-Soto, 2015). 
 
Para interpretarlo hay que considerar:
 
- Mínimo para investigación básica exploratoria: > .7
- Mínimo para investigación asociativa: > .8
- Investigación con decisiones muy importantes: > .9 (Nunnally & Bernstein, 1994). 

A mayor valor, más consistente es la escala:

- Consideraremos el 0.6 como punto de corte.

::: callout-note
ADVERTENCIA: el alfa de Chronbarch es para variables con nivel de medición intervalar. Lo óptimo para variables ordinales es Alfa Ordinal u Omega (Ventura-León & Caycho-Rodríguez, 2017).
:::

Asimismo, esperamos que la correlación de cada ítem respecto del total sea al menos de .4 (media) y, ojalá, de al menos .6 (alta). Ítems con correlaciones muy bajas podrían eliminarse, especialmente si el alfa de Chronbach aumenta en caso de que el ítem sea eliminado. 


```{r}
psych::alpha(data)
```

## Creación de escala

```{r}
data <- cbind(data, 
              "sintomatologia_depresiva"=rowSums(data, 
              na.rm=TRUE))

summary(data$sintomatologia_depresiva)
```


# Otro ejemplo

## Datos y variables

Utilizaremos específicamente el módulo de **Ciudadanía**. De este módulo utilizaremos un concepto en particular llamado *Confianza en instituciones* con los ítems:

- Grado de confianza: El Gobierno

- Grado de confianza: Los Partidos políticos

- Grado de confianza: Carabineros

- Grado de confianza: Los sindicatos

- Grado de confianza: Las empresas privadas

- Grado de confianza: El congreso nacional

- Grado de confianza: El presidente de la república


La idea general es ver si esque todas estas variables miden algún tipo de *confianza*.

## Filtrar base de datos

Filtraremos la base de datos para quedarnos con las observaciones correspondientes solamente a la ola 4, y además seleccionaremos los ítems de interés.

```{r}
data <- elsoc_long_2016_2022.2 %>% filter(ola==4) %>%  # seleccionamos solo los casos de la ola 1
  select(conf_gob = c05_01,
         conf_part = c05_02,
         conf_carab = c05_03,
         conf_sind = c05_04,
         conf_empre = c05_06,
         conf_cong = c05_07,
         conf_pres = c05_08,
         )

```

Estos ítems cuentan con las mismas categorías de respuesta: (1) Nada, a (5) Mucho. Además de los valores codificados como -888 y -999.

### Recodificar

Recodificamos los valores -888 y -999 en NA y eliminamos los NAs.

```{r, message=FALSE, warning=FALSE}
data$conf_gob <- car::recode(data$conf_gob, "c(-999,-888)=NA")
data$conf_part <- car::recode(data$conf_part, "c(-999,-888)=NA")
data$conf_carab <- car::recode(data$conf_carab, "c(-999,-888)=NA")
data$conf_sind <- car::recode(data$conf_sind, "c(-999,-888)=NA")
data$conf_empre <- car::recode(data$conf_empre, "c(-999,-888)=NA")
data$conf_cong <- car::recode(data$conf_cong, "c(-999,-888)=NA")
data$conf_pres <- car::recode(data$conf_pres, "c(-999,-888)=NA")


data$conf_gob <- set_labels(data$conf_gob,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))

data$conf_part <- set_labels(data$conf_part,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))

data$conf_carab <- set_labels(data$conf_carab,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))

data$conf_sind <- set_labels(data$conf_sind,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))
data$conf_empre <- set_labels(data$conf_empre,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))
data$conf_cong <- set_labels(data$conf_cong,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))
data$conf_pres <- set_labels(data$conf_pres,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))
```

## Análisis

```{r}
plot_stackfrq(data) + theme(legend.position="bottom")
```


### Estimar correlación

```{r}
tab_corr(data, triangle = "lower")
```

Podemos observar que todas las correlaciones son positivas, por lo que no quedaron ítems invertidos.

```{r}
psych::alpha(data)
```

Si sacamos conf_sind el alpha sube a 0.8

```{r}
data %>% select(conf_gob:conf_carab, conf_empre:conf_pres) %>% psych::alpha()
```


```{r}
data <- cbind(data, 
              "conf_inst"=rowMeans(data %>%
              dplyr::select(conf_gob:conf_carab, conf_empre:conf_pres), 
              na.rm=TRUE))

summary(data$conf_inst)
```




